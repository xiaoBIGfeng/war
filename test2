import os
import shutil
from tqdm import tqdm  # 用于显示进度条


def extract_top_k_scenes(txt_file, parent_folder, output_folder, k=5):
    """
    根据 txt 文件中 'Ours most advantageous scene' 数据，提取 Top K 场景的图片
    """
    # 读取 txt 文件
    with open(txt_file, "r") as f:
        lines = f.readlines()

    # 找到 "Ours most advantageous scene" 部分
    start_line = None
    for i, line in enumerate(lines):
        if "Ours most advantageous scene:" in line:
            start_line = i + 1  # 数据从下一行开始
            break

    if start_line is None:
        raise ValueError("未找到 'Ours most advantageous scene' 部分")

    # 提取场景数据
    scenes = []
    for line in lines[start_line:]:
        if line.strip():  # 跳过空行
            parts = line.split("with score")
            if len(parts) == 2:
                scene_info = parts[0].strip()  # 例如 "1. 99_r7989.png"
                score = float(parts[1].strip())

                # 提取索引和文件名
                index, scene_name = scene_info.split(".", 1)  # 按 "." 分割
                index = int(index.strip())  # 提取索引
                scene_name = scene_name.strip()  # 提取文件名
                scenes.append((index, scene_name, score))

    # 按分数排序并获取 Top K 场景
    scenes = sorted(scenes, key=lambda x: x[2], reverse=True)  # 按分数降序排序
    top_k_scenes = scenes[:k]

    # 提取索引
    scene_indices = [scene[0] for scene in top_k_scenes]  # 提取索引

    # 创建输出文件夹
    if not os.path.exists(output_folder):
        os.makedirs(output_folder)

    # 遍历每个索引并提取图片
    gt_folder = os.path.join(parent_folder, "GT")
    method_folders = [f for f in os.listdir(parent_folder) if os.path.isdir(os.path.join(parent_folder, f)) and f != "GT"]

    for i, index in enumerate(tqdm(scene_indices, desc="Extracting scenes")):
        # 创建单独的文件夹（按索引命名）
        scene_output_folder = os.path.join(output_folder, str(index))
        if not os.path.exists(scene_output_folder):
            os.makedirs(scene_output_folder)

        # 提取 GT 图片
        extract_image_for_scene(gt_folder, index, scene_output_folder, "_GT")

        # 提取方法文件夹中的图片
        for method_folder in method_folders:
            method_folder_path = os.path.join(parent_folder, method_folder)
            extract_image_for_scene(method_folder_path, index, scene_output_folder, f"_{method_folder}")


def extract_image_for_scene(folder, index, output_folder, suffix):
    """
    从指定文件夹中提取某一索引的图片，保存到目标文件夹，并在文件名后加上后缀
    """
    # 获取文件夹中的图片，按文件名排序
    images = sorted(os.listdir(folder))

    # 提取对应索引的图片
    if index - 1 < len(images):  # 索引是从 1 开始的，所以需要减 1
        src_path = os.path.join(folder, images[index - 1])
        # 在文件名后添加后缀
        name, ext = os.path.splitext(images[index - 1])
        dst_name = f"{name}{suffix}{ext}"
        dst_path = os.path.join(output_folder, dst_name)
        shutil.copy(src_path, dst_path)  # 复制图片到目标文件夹


if __name__ == "__main__":
    # 输入参数
    txt_file_path = "psnr_results.txt"  # 刚刚生成的 txt 文件路径
    parent_folder_path = "path/to/parent_folder"  # 父文件夹路径
    output_folder_path = "path/to/output_folder"  # 提取图片的输出文件夹
    top_k = 5  # 提取 Top K 场景

    # 执行提取
    extract_top_k_scenes(txt_file_path, parent_folder_path, output_folder_path, k=top_k)
