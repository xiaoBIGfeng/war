import os
import cv2
import numpy as np


def calculate_psnr(img1, img2):
    """
    计算两张图片的 PSNR
    """
    mse = np.mean((img1 - img2) ** 2)
    if mse == 0:  # 完全相同的图片
        return float('inf')
    max_pixel = 255.0  # 假定图像像素范围为 [0, 255]
    psnr = 10 * np.log10((max_pixel ** 2) / mse)
    return psnr


def process_images(parent_folder, output_file="psnr_results.txt"):
    """
    计算每个方法文件夹的图片与 GT 文件夹中对应图片的 PSNR，并记录到文件
    """
    # 定位 GT 文件夹和其他方法文件夹
    gt_folder = os.path.join(parent_folder, "GT")
    if not os.path.exists(gt_folder):
        raise FileNotFoundError(f"GT 文件夹未找到：{gt_folder}")

    method_folders = [f for f in os.listdir(parent_folder) if os.path.isdir(os.path.join(parent_folder, f)) and f != "GT"]

    # 获取 GT 文件夹中的图片文件名（假定所有文件夹图片顺序和命名一致）
    gt_images = sorted(os.listdir(gt_folder))

    # 写入结果文件
    with open(output_file, "w") as f:
        # 写入表头
        header = "name\t" + "\t".join(method_folders) + "\n"
        f.write(header)

        # 遍历 GT 文件夹中的每张图片
        for gt_image_name in gt_images:
            gt_image_path = os.path.join(gt_folder, gt_image_name)

            # 读取 GT 图片
            gt_image = cv2.imread(gt_image_path, cv2.IMREAD_GRAYSCALE)
            if gt_image is None:
                print(f"无法读取 GT 图片：{gt_image_path}")
                continue

            # 初始化当前行的数据
            row = [gt_image_name]

            # 遍历每个方法文件夹
            for method_folder in method_folders:
                method_image_path = os.path.join(parent_folder, method_folder, gt_image_name)

                # 读取方法文件夹中的对应图片
                method_image = cv2.imread(method_image_path, cv2.IMREAD_GRAYSCALE)
                if method_image is None:
                    print(f"无法读取方法图片：{method_image_path}")
                    row.append("N/A")  # 图片缺失时记录为 "N/A"
                    continue

                # 计算 PSNR
                psnr = calculate_psnr(gt_image, method_image)
                row.append(f"{psnr:.2f}")  # 保留两位小数

            # 写入当前行到文件
            f.write("\t".join(row) + "\n")

    print(f"PSNR 计算完成，结果已保存到：{output_file}")


if __name__ == "__main__":
    # 父文件夹路径（替换为实际路径）
    parent_folder_path = "path/to/parent_folder"  # 替换为父文件夹路径
    output_file_path = "psnr_results.txt"  # 输出文件名，可自定义

    # 执行 PSNR 计算
    process_images(parent_folder_path, output_file_path)
