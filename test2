import os
import shutil
from tqdm import tqdm  # 进度条


def extract_top_k_scenes(txt_file, parent_folder, output_folder, k=5):
    """
    根据 txt 文件中 'Ours most advantageous scene' 数据，提取 Top K 场景的图片
    """
    # 读取 txt 文件
    with open(txt_file, "r") as f:
        lines = f.readlines()

    # 找到 "Ours most advantageous scene" 部分
    start_line = None
    for i, line in enumerate(lines):
        if "Ours most advantageous scene:" in line:
            start_line = i + 1  # 数据从下一行开始
            break

    if start_line is None:
        raise ValueError("未找到 'Ours most advantageous scene' 部分")

    # 提取场景数据
    scenes = []
    for line in lines[start_line:]:
        if line.strip():  # 跳过空行
            parts = line.split("with score")
            if len(parts) == 2:
                scene_info = parts[0].strip()  # 例如 "1. img_name"
                score = float(parts[1].strip())

                # 提取索引和文件名
                index, scene_name = scene_info.split(".", 1)  # 按 "." 分割
                index = int(index.strip())  # 提取索引
                scene_name = scene_name.strip()  # 提取文件名
                scenes.append((index, scene_name, score))

    # 按分数排序并获取 Top K 场景
    scenes = sorted(scenes, key=lambda x: x[2], reverse=True)  # 按分数降序排序
    top_k_scenes = scenes[:k]

    # 创建输出文件夹
    if not os.path.exists(output_folder):
        os.makedirs(output_folder)

    # 遍历每个 Top K 场景并提取图片
    gt_folder = os.path.join(parent_folder, "GT")
    method_folders = [f for f in os.listdir(parent_folder) if os.path.isdir(os.path.join(parent_folder, f)) and f != "GT"]

    for scene in tqdm(top_k_scenes, desc="Extracting top-k scenes"):
        scene_index, scene_name, _ = scene

        # 创建单独的文件夹（以场景名命名）
        scene_output_folder = os.path.join(output_folder, f"{scene_index}_{scene_name}")
        if not os.path.exists(scene_output_folder):
            os.makedirs(scene_output_folder)

        # 提取 GT 图片
        extract_image_by_name(gt_folder, scene_name, scene_output_folder, "_GT")

        # 提取方法文件夹中的图片
        for method_folder in method_folders:
            method_folder_path = os.path.join(parent_folder, method_folder)
            extract_image_by_name(method_folder_path, scene_name, scene_output_folder, f"_{method_folder}")


def extract_image_by_name(folder, scene_name, output_folder, suffix):
    """
    从指定文件夹中提取某一文件名匹配的图片，保存到目标文件夹，并在文件名后加上后缀
    """
    # 遍历文件夹中的图片，寻找匹配的文件名
    for image in os.listdir(folder):
        if scene_name in image:  # 确保文件名中包含场景名
            src_path = os.path.join(folder, image)
            # 在文件名后添加后缀
            name, ext = os.path.splitext(image)
            dst_name = f"{name}{suffix}{ext}"
            dst_path = os.path.join(output_folder, dst_name)
            shutil.copy(src_path, dst_path)  # 复制图片到目标文件夹
            return  # 一旦找到匹配图片，立即返回


if __name__ == "__main__":
    # 输入参数
    txt_file_path = "psnr_results.txt"  # 刚刚生成的 txt 文件路径
    parent_folder_path = "path/to/parent_folder"  # 父文件夹路径
    output_folder_path = "path/to/output_folder"  # 提取图片的输出文件夹
    top_k = 5  # 提取 Top K 场景

    # 执行提取
    extract_top_k_scenes(txt_file_path, parent_folder_path, output_folder_path, k=top_k)
